# If you use Google Colab, upload indeksmonsunindo.xlsx to your Google Drive first
# If you have any questions about the script, feel free to contact me: kristy@students.itb.ac.id

from google.colab import drive
drive.mount('/content/drive')

# Import Library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Import Data
data = pd.read_excel('/content/drive/MyDrive/indeksmonsunindo.xlsx')

# Pengaturan Parameter Wavelet
dj = 0.25 #Increment scale
pad = 0 #Time series diset nilai 0 (Default) 
s0 = 2.*dt #Scale dimulai 6 bulanan (Default) | s0 merupakan scale terkecil dari Wavelet
j1 = 7./dj #Jumlah scale - 1 | Rentang  scale dari s0 sampai s0*2**(j1*dj) dengan jumlah scale sebanyak (j1+1)
mother = 'MORLET' #Shape Wavelet ada: Morlet, Difference of Gaussian (DOG), Paul)
lag1 = 0.72 #Lag-1 autocorrelation digunakan untuk level signifikansi

# Transformasi Wavelet
wave, period, scale, coi = wavelet(data, dt=dt, pad=pad, dj=dj, s0=s0, J1=j1, mother=mother) # fungsi wavelet
power = (np.abs(wave))**2 # hitung wavelet power spectrum
global_ws = (np.sum(power, axis=1))/n # time-average over all scale (global_ws)

# Pengaturan Selang Kepercayaan
signif = wave_signif(variance,dt=dt,scale=scale,sigtest=0,lag1=lag1,mother=mother)# fungsi signifikansi
sig95 = signif[:, np.newaxis].dot(np.ones(n)[np.newaxis,:])# buat signif --> (J+1)x(N) array
sig95 = power/sig95 # ketika ratio power dan signif > 1, power signifikan

# Spektrum Global Wavelet & Selang Kepercayaan
dof = n-scale# the scale corrects for padding at edges
global_signif = wave_signif(variance,dt=dt,scale=scale,sigtest=1,lag1=lag1,dof=dof, mother=mother) # fungsi signifikansi untuk global_ws

# Scale-average pada rentang periode 2 dan 8
avg = np.logical_and(scale>=2,scale<8) # Logika untuk mengambil rentang skala 2 - 8
Cdelta= 0.776 # Cdelta untuk MORLET wavelet
scale_avg = scale[:, np.newaxis].dot(np.ones(n)[np.newaxis,:]) # buat scale --> (J+1)x(N) array
scale_avg = power/scale_avg # [Eqn(24)] di referensi
scale_avg = dj*dt/Cdelta*sum(scale_avg[avg, :]) # [Eqn(24)] di referensi
scale_signif = wave_signif(variance,dt=dt,scale=scale,sigtest=2,dof=[2,7],lag1=lag1,mother=mother) # fungsi signifikansi untuk scale average

# Wavelet Power Spectrum
plt.figure(figsize=(10,5))

#Plot contourf power, contour signifikansi, dan coi
levels = [0, 0.5, 1, 2, 4, 999]
cs = plt.contourf(time, period, power, levels=levels, colors=['white', 'bisque', 'orange', 'orangered', 'darkred'])
plt.contour(time, period, sig95,[-99,1], colors='k')
plt.plot(time,coi)
coi_area=np.concatenate([[np.max(scale)],coi,[np.max(scale)],[np.max(scale)]])
ts_area=np.concatenate([[time[0]], time, [time[-1]], [time[0]]])
plt.fill(ts_area, coi_area, 'blue', alpha=0.3, hatch='x')

plt.xlabel('Time (year)')
plt.ylabel('Period (years)')
plt.title('Wavelet Power Spectrum Morlet (contours at 0.5,1,2,4\u00B0C$^2$)')
plt.xlim(xlim[:])
plt.ylim([np.min(period), np.max(period)])
plt.yscale('log', basey=2, subsy=None) 
plt.gca().invert_yaxis()
plt.gca().yaxis.set_major_formatter(ScalarFormatter())

#Plot colorbar 
plt.colorbar(cs)

plt.figure(figsize=(3,8))

#Plot global wavelet spectrum dan signifikansinya
plt.plot(global_ws, period)
plt.plot(global_signif, period, '--')

plt.xlabel('Power (\u00B0C$^2$)')
plt.title('Global Wavelet Spectrum')
plt.xlim([0, 1.25 * np.max(global_ws)])
plt.ylim([np.min(period), np.max(period)])
plt.yscale('log', basey=2, subsy=None)
plt.gca().invert_yaxis()
plt.gca().yaxis.set_major_formatter(ScalarFormatter())
plt.ticklabel_format(axis='y', style='plain')

#Plot time series 2-8 yr scale-average dan signifikansinya
plt.plot(time, scale_avg, 'k')
plt.plot(xlim,scale_signif+[0,0], '--')
plt.xlim(xlim[:])

plt.xlabel('Time (year)')
plt.ylabel('Avg variance (\u00B0C$^2$)')
plt.title('2-8 yr Scale-average Time Series')
plt.show()
